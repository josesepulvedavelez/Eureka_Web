@page "/Articulo/ArticuloIndex"

<h3 style="text-align: center;">Articulos</h3>

<RadzenDialog />
<RadzenNotification />

@if (lstArticulos == null)
{
    <div class="d-flex justify-content-center">
        <RadzenProgressBarCircular ShowValue="true" Mode="ProgressBarMode.Indeterminate" Size="ProgressBarCircularSize.Large">
            <Template>Wait</Template>
        </RadzenProgressBarCircular>
    </div>
}
else
{
    <div class="container">
		<button type="button" @onclick="(()=> Create())" class="btn btn-success">
			<span class="oi oi-plus" aria-hidden="true"></span>
		</button>

		<br />
        <br />

        <div class="row">
            <div class="col-sm-12 text-left">
                <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" PageSize="10" AllowPaging="true" FilterMode="FilterMode.Advanced" AllowSorting="true"
                            Data="lstArticulos" TItem="Models.Articulo" ColumnWidth="150px"
                            LogicalFilterOperator="LogicalFilterOperator.Or" EmptyText="No se encontraron registros.">
                    <Columns>
                        <RadzenDataGridColumn TItem="Articulo" Property="Codigo" Title="Codigo" />
                        <RadzenDataGridColumn TItem="Articulo" Property="Descripcion" Title="Descripcion" />
                        <RadzenDataGridColumn TItem="Articulo" Property="Costo" Title="Costo">
                            <Template Context="articulo">
                                $@string.Format("{0:N2}", articulo.Costo)
                            </Template>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="Articulo" Property="Porcentaje" Title="Porcentaje">
                            <Template Context="articulo">
                                $@string.Format("{0:00.00}%", articulo.Porcentaje)
                            </Template>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="Articulo" Property="PrecioSugerido" Title="PrecioSugerido">
                            <Template Context="articulo">
                                $@string.Format("{0:N2}", articulo.PrecioSugerido)
                            </Template>
                        </RadzenDataGridColumn>                        
                        <RadzenDataGridColumn TItem="Articulo" Property="Cantidad" Title="Cantidad" />
                        <RadzenDataGridColumn TItem="Articulo" Property="Estado" Title="Estado">
                            <Template Context="data">
                                @*<RadzenSwitch @bind-Value="data.Estado" />*@
                                @if (data.Estado == false)
                                {
                                    <span class="badge bg-light text-dark">Inactivo</span>
                                }
                                else if (data.Estado == true)
                                {
                                    <span class="badge bg-success">Activo</span>
                                }
                            </Template>
                            
                        </RadzenDataGridColumn>

                        <RadzenDataGridColumn TItem="Models.Articulo" Property="ArticuloId" Title="Acciones">
                            <Template Context="data">
                                <button type="button" @onclick="(()=>Update(data.ArticuloId))" class="btn btn-info">
                                    <span class="oi oi-pencil" aria-hidden="true"></span>
                                </button>
                            </Template>
                        </RadzenDataGridColumn>
                    </Columns>
                </RadzenDataGrid>
            </div>
        </div>
    </div>
}

@code {
    List<Articulo> lstArticulos;

    protected override async Task OnInitializedAsync()
    {
        DialogService.OnClose += Close;
        await GetArticulos();
    }

    public async Task GetArticulos()
    {
        var response = await _http.GetFromJsonAsync<List<Articulo>>("Api/Articulos/GetArticulos");

        if (response != null)
        {
            lstArticulos = response;    
        }

        StateHasChanged();
    }

    void Close(dynamic result)
    {
        Task.Run(() => GetArticulos());
    }

    private async Task Update(int id)
    {
        await DialogService.OpenAsync<ArticuloUpdate>($"Actualizar Articulo",
           new Dictionary<string, object>() { { "Id", id } },
           new DialogOptions() { Width = "700px", Height = "570px", Resizable = true });
    }

    private async Task Create()
    {
        await DialogService.OpenAsync<ArticuloCreate>($"Crear articulo",
            new Dictionary<string, object>() { },
            new DialogOptions() { Width = "700px", Height = "570px", Resizable = true });
    }
}

